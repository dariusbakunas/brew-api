type Hop {
  id: ID!
  name: String!
  aaLow: Float
  aaHigh: Float
  betaLow: Float
  betaHigh: Float
  description: String
  bittering: Boolean!
  aroma: Boolean!
  origin: Country!
}

input HopInput {
  name: String!
  aaLow: Float
  aaHigh: Float
  betaLow: Float
  betaHigh: Float
  description: String
  bittering: Boolean!
  aroma: Boolean!
  originId: ID!
}

enum SortableHopField {
  NAME
}

type HopsResponse {
  pageInfo: PageInfo!
  data: [Hop!]!
}

extend type Query {
  hops(
    cursor: String,
    limit: Int = 10,
    sortDirection: SortDirection = ASCENDING,
    sortBy: SortableHopField = NAME
  ): HopsResponse!
}
extend type Mutation {
  createHop(input: HopInput!) : Hop!
  updateHop(id: ID!, input: HopInput!) : Hop!
  removeHop(id: ID!): ID!
}
