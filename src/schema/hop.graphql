type Hop {
  id: ID!
  name: String!
  aaLow: Float!
  aaHigh: Float!
  description: String
  usage: String!
  flavorProfile: [String!]!
  origin: Country!
}

input HopInput {
  name: String!
  aaLow: Float!
  aaHigh: Float!
  description: String
  usage: String!
  flavorProfile: [String!]
  originId: ID!
}

extend type Query {
  hops: [Hop!]! @hasScope(scope: ["activeUser"])
}
extend type Mutation {
  createHop(input: HopInput!) : Hop! @hasScope(scope: ["activeUser"])
}
