enum UserStatus {
  NEW
  ACTIVE
  INACTIVE
}

type User {
  id: ID!
  username: String!
  firstName: String
  isAdmin: Boolean!
  lastName: String
  email: String!
  status: UserStatus!
  scopes: [String!]!
}

input RegistrationInput {
  firstName: String
  lastName: String
  username: String!
  email: String!
  code: String!
}

type ActivationResponse {
  success: Boolean!
}

input UserInput {
  firstName: String
  lastName: String
  username: String!
  email: String!
}

type Invitation {
  id: ID!
  code: String!
  email: String!
}

extend type Query {
  invitations: [Invitation!]! @hasScope(scope: ["listAllInvitations"])
  users: [User!]! @hasScope(scope: ["listAllUsers"])
  userByEmail(email: String!): User @hasScope(scope: ["activeUser", "initialAuth"])
}

extend type Mutation {
  activateUser(token: String!): ActivationResponse!
  createInvitation(email: String!, sendEmail: Boolean): Invitation! @hasScope(scope: ["createInvitation"])
  deleteInvitation(email: String!): ID! @hasScope(scope: ["deleteInvitation"])
  register(input: RegistrationInput!): User! @hasScope(scope: ["registerUser"])
  removeUser(id: ID!): ID! @hasScope(scope: ["removeUser"])
}
